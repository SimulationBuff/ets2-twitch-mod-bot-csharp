# .pre-commit-config.yaml
# Pre-commit configuration to run basic hygiene hooks plus ruff and black.
# - basic hooks: check YAML, trailing whitespace, end-of-file fixer, large file add protection
# - ruff: lint and auto-fix where possible
# - black: enforce formatting (check or run depending on how you invoke pre-commit)
#
# Note: If you want ruff to automatically apply fixes on commit, keep the `--fix` arg.
# If you'd prefer commits to fail instead of being auto-fixed, remove `--fix`.
#
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ["--maxkb=5120"]

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    # pinned to a tag so CI and local runs are reproducible
    rev: v0.0.280
    hooks:
      - id: ruff
        name: ruff (linter & fixer)
        entry: ruff
        language: python
        types: [python]
        # Auto-fix on commit; remove --fix to only lint without modifying files
        args: ["--fix", "--line-length=88"]

  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
        name: black (code formatter)
        language_version: python3
        args: ["--line-length=88"]

  # Optional: ensure requirements and Python packaging files are valid (uncomment if desired)
  # - repo: https://github.com/ammaraskar/pre-commit-hooks-yaml
  #   rev: v1.0.2
  #   hooks:
  #     - id: yamllint
# You can add local overrides (files to skip, etc.) by creating .pre-commit-config.yaml in project root
# or by using .pre-commit-hooks.yaml for custom local hooks. Typical usage:
#   pip install pre-commit
#   pre-commit install
#   pre-commit run --all-files
#
# If CI should auto-fix formatting/lint issues, run `pre-commit run --all-files` and commit changes in CI.
